<script>

var psid;
var id = <%= raw @id %>;
//var name = "<%= @defName %>";
var telephoneNo = "<%= @telephoneNo %>";
var streetNo = "<%= @streetNo %>";
var street = "<%= @street %>";
var apt = "<%= @apt %>";
var municipality = "<%= @municipality %>";
var province = "<%= @province %>";
var postalCode = "<%= @postalCode %>";
var offenceNo  = "<%= @offenceNo %>";
var offenceDate = "<%= @offenceDate %>";
var iconCode = "<%= @iconCode %>";
var courtDate = "<%= @courtDate %>";
var courtroom = "<%= @courtRoom %>";
var courtTime = "<%= @courtTime %>";
var officerName = "<%= @officerName %>";
var officerNumber = "<%= @officerNumber %>";
var officerDivision = "<%= @officerDivision %>";
var faxNo = "<%= @faxNo %>";
var offence = "<%= @offence %>";
var iconCodeArray = [<%= raw @iconCodesArray.to_json %>];
var chargeNames = [<%= raw @chargeNamesArray.to_json %>];
var formFieldsMap = <%= raw @formFieldsMap.to_json %>;
var nameInfoModal;
var offenceNoInfoModal;
var offenceDateInfoModal;
var givenName = "<%= @givenName %>";
var familyName = "<%= @familyName %>";
var telephoneNo1 = "<%= @telephoneNo1 %>";
var telephoneNo2 = "<%= @telephoneNo2 %>";
var telephoneNo3 = "<%= @telephoneNo3 %>";

var faxNo1 = "<%= @faxNo1 %>";
var faxNo2 = "<%= @faxNo2 %>";
var faxNo3 = "<%= @faxNo3 %>";
var emailAddress= "<%= @emailAddress %>";
var displaySpeedFields = false;
var displaySpeedFields = "<%= @displaySpeedFields %>";
var actualSpeed = "<%= @actualSpeed %>";
var maxSpeed = "<%= @maxSpeed %>";
var isSpeedingCharge = "<%= @isSpeedingCharge %>";
var iconCodeGlobal;

var iosTouchContactTime;
var isMobile = false;
var isBeta = <%= @isBeta %>;
var chargeName;


window.onload = function(){
  nameInfoModal = document.getElementById('nameInfoModal');
  offenceNoInfoModal = document.getElementById('offenceNoInfoModal');
  offenceDateInfoModal = document.getElementById('offenceDateInfoModal');
  
  //Check if Mobile - needs to be tested
  if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) 
    || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0,4))) isMobile = true;

  
 

  hideAll();
   PrePopulateForm();
//alert(offence);
  var e = document.getElementById("iconCodeDropdown");
  var selectedIconCode = e.options[e.selectedIndex].value;
  showRelevantFields(selectedIconCode);  
  
  nameInfoModal = document.getElementById('nameInfoModal');
  var nameInfoBtn = document.getElementById("nameInfoBtn");
  nameInfoBtn.onclick = function() {
      nameInfoModal.style.display = "block";
  }

  offenceNoInfoModal = document.getElementById('offenceNoInfoModal');
  offenceNoInfoBtn = document.getElementById("offenceNoInfoBtn");
  offenceNoInfoBtn.onclick = function() {
      offenceNoInfoModal.style.display = "block";
  }

  offenceDateInfoModal = document.getElementById('offenceDateInfoModal');
  offenceDateInfoBtn = document.getElementById("offenceDateInfoBtn");
  offenceDateInfoBtn.onclick = function() {
      offenceDateInfoModal.style.display = "block";
  }

  iconCodeInfoModal = document.getElementById('iconCodeInfoModal');
  iconCodeInfoBtn = document.getElementById("iconCodeInfoBtn");
  iconCodeInfoBtn.onclick = function() {
      iconCodeInfoModal.style.display = "block";
  }

  courtDateInfoModal = document.getElementById('courtDateInfoModal');
  courtDateInfoModalBtn = document.getElementById("courtDateInfoModalBtn");
  courtDateInfoModalBtn.onclick = function() {
      courtDateInfoModal.style.display = "block";
  }

// When the user clicks anywhere outside of the modal, close it
  window.onclick = function(event) {
    if (event.target == nameInfoModal) {
        nameInfoModal.style.display = "none";
    }
    else if (event.target == offenceNoInfoModal) {
        offenceNoInfoModal.style.display = "none";
    }
    else if (event.target == offenceDateInfoModal) {
        offenceDateInfoModal.style.display = "none";
    }
    else if (event.target == iconCodeInfoModal) {
        iconCodeInfoModal.style.display = "none";
    }
    else if (event.target == courtDateInfoModal) {
        courtDateInfoModal.style.display = "none";
    }
  }

  
 } 


 function autotab(current)
{
   if (current.name=="telephoneNo1" && current.value.length==current.getAttribute("maxlength")) 
    {
        document.getElementById("telephoneNo2").focus(); 
    }
   else if(current.name=="telephoneNo2" && current.value.length==current.getAttribute("maxlength")) 
    {
        document.getElementById("telephoneNo3").focus(); 
    }
    else if(current.name=="faxNo1" && current.value.length==current.getAttribute("maxlength")) 
    {
        document.getElementById("faxNo2").focus(); 
    }
    else if(current.name=="faxNo2" && current.value.length==current.getAttribute("maxlength")) 
    {
        document.getElementById("faxNo3").focus(); 
    }
}
 function showRelevantFields(iconCode){
  var formFields= formFieldsMap[iconCode];
         for (i = 0; i < formFields.length; i++) {  
             var lbl=formFields[i]+"Lbl";
             var field=formFields[i]+"Field";
             document.getElementById(lbl.toString()).style.display="block";
             document.getElementById(field.toString()).style.display="block";
          }
   if("Speeding" == document.getElementById("offenceDropdown").value && iconCode == "4961"){
    document.getElementById("speedingDivLbl").style.display="block";
    document.getElementById("speedingDivField").style.display="block";
   }          
 }
function hideAll(){
    document.getElementById("requestedByLbl").style.display="none";
    document.getElementById("requestedByField").style.display="none";
    document.getElementById("courtDateField").style.display="none";
    document.getElementById("courtDateLbl").style.display="none";
    document.getElementById("courtroomLbl").style.display="none";
    document.getElementById("courtroomField").style.display="none";
    document.getElementById("courtTimeLbl").style.display="none";
    document.getElementById("courtTimeField").style.display="none";
    document.getElementById("offenceNoLbl").style.display="none";
    document.getElementById("offenceNoField").style.display="none";
    document.getElementById("officerNameField").style.display="none";
    document.getElementById("officerNameLbl").style.display="none";
    document.getElementById("offenceDateLbl").style.display="none";
    document.getElementById("offenceDateField").style.display="none";
    document.getElementById("officerNumberLbl").style.display="none";
    document.getElementById("officerNumberField").style.display="none";
    document.getElementById("officerDivisionLbl").style.display="none";
    document.getElementById("officerDivisionField").style.display="none";
    document.getElementById("speedingDivLbl").style.display="none";
    document.getElementById("speedingDivField").style.display="none";
    document.getElementById("emailAddressLbl").style.display="none";
    document.getElementById("emailAddressField").style.display="none";
    document.getElementById("faxNoLbl").style.display="none";
    document.getElementById("faxNoField").style.display="none";
}

// All the messenger functions have to be written inside here.
/*
window.extAsyncInit = function() {
  MessengerExtensions.getContext(
    "<%= @FB_APP_ID %>",
    function success(context) {
      window.attachApp(
        context.psid,
        context.thread_type);
    }, function error(err) {
      window.attachApp();
    });
  MessengerExtensions.getUserID(function success(uids) {
    // User ID was successfully obtained. 
    psid = uids.psid;
  }, function error(err, errorMessage) {      
    // Error handling code
    console.log("Error hit");
  }); 
};
*/

function getParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, " "));
}
function PrePopulateForm(){
  setTextInputValueById("givenName", givenName);
  setTextInputValueById("familyName", familyName);
  setTextInputValueById('streetNo', streetNo);
  setTextInputValueById('street', street);
  setTextInputValueById('apt', apt);
  setTextInputValueById('municipality', municipality);
  setTextInputValueById('province', province);
  setTextInputValueById('postal', postalCode);
  setTextInputValueById('offenceNo', offenceNo);
  setTextInputValueById('offenceDate', offenceDate);
  setTextInputValueById('courtDate', courtDate);
  setTextInputValueById('courtTime', courtTime);
  setTextInputValueById('telephoneNo1', telephoneNo1);
  setTextInputValueById('telephoneNo2', telephoneNo2);
  setTextInputValueById('telephoneNo3', telephoneNo3);
  setTextInputValueById('faxNo1', faxNo1);
  setTextInputValueById('faxNo2', faxNo2);
  setTextInputValueById('faxNo3', faxNo3);
  setTextInputValueById('courtroom', courtroom);
  setTextInputValueById('officerName', officerName);
  setTextInputValueById('officerNumber', officerNumber);
  setTextInputValueById('officerDivision', officerDivision);
  setTextInputValueById('actualSpeed', actualSpeed);
  setTextInputValueById('maxSpeed', maxSpeed);
  setTextInputValueById('emailAdd', emailAddress);
  setIconCodeDropdown();
  setChargeNamesDropdown();
}
function hideAndShowFields(iconCode){
    hideAll();
    var tempIcon;
    if (iconCode == "NO_ICON_CODE")
    {
      var iconCodeDropdown = document.getElementById("iconCodeDropdown");
      tempIcon = iconCodeDropdown.options[iconCodeDropdown.selectedIndex].text;
    } else {
      tempIcon = iconCode.value;
    }   
  
  showRelevantFields(tempIcon);  
}


function initAutocomplete() {
  var map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: 43.6532, lng: -79.3832},
    zoom: 13,
    mapTypeId: 'roadmap'
  });

  // Create the search box and link it to the UI element.
  var input = document.getElementById('pac-input');
  var searchBox = new google.maps.places.SearchBox(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

  // Bias the SearchBox results towards current map's viewport.
  map.addListener('bounds_changed', function() {
    searchBox.setBounds(map.getBounds());
  });

  var markers = [];
  // Listen for the event fired when the user selects a prediction and retrieve
  // more details for that place.
  searchBox.addListener('places_changed', function() {
    var places = searchBox.getPlaces();

    if (places.length == 0) {
      return;
    }

    // Clear out the old markers.
    markers.forEach(function(marker) {
      marker.setMap(null);
    });
    markers = [];

    // For each place, get the icon, name and location.
    var bounds = new google.maps.LatLngBounds();
    places.forEach(function(place) {
      if (!place.geometry) {
        console.log("Returned place contains no geometry");
        return;
      }
      
      var icon = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25)
      };

      // Create a marker for each place.
      markers.push(new google.maps.Marker({
        map: map,
        icon: icon,
        title: place.name,
        position: place.geometry.location
      }));
      
      if (place.geometry.viewport) {
        // Only geocodes have viewport.
        bounds.union(place.geometry.viewport);
      } else {
        bounds.extend(place.geometry.location);
      }

      var address = placeToAddress(place)
    });
    map.fitBounds(bounds);
  });
}


function placeToAddress(place){
  var address = {};
  place.address_components.forEach(function(c) {
      switch(c.types[0]){
          case 'street_number':
              populateTextInputById('streetNo', c.long_name);
              break;
          case 'route':
              populateTextInputById('street', c.long_name);
              break;
          case 'neighborhood': case 'locality':    // North Hollywood or Los Angeles?
              populateTextInputById('municipality', c.long_name);
              break;
          case 'administrative_area_level_1':     //  Note some countries don't have states
              populateTextInputById('province', c.long_name);
              break;
          case 'postal_code':
              populateTextInputById('postal', c.long_name);
              break;
      }
  });
  return address;
}

function populateTextInputById(textInputId, textToDisplay){
  var textInput = document.getElementById(textInputId);
  textInput.value = textToDisplay;
}

function collectDisclosureRequestData(){
  
  givenName = getTextInputValueById('givenName');
  familyName = getTextInputValueById('familyName');
  streetNo  = getTextInputValueById('streetNo');
  street = getTextInputValueById('street');
  apt = getTextInputValueById('apt');
  municipality = getTextInputValueById('municipality');
  province = getTextInputValueById('province');
  postalCode = getTextInputValueById('postal');
  offenceNo = getTextInputValueById('offenceNo');
  //offence = getTextInputValueById('offenceDropdown').value;
  offenceDate = getTextInputValueById('offenceDate');
  courtDate = getTextInputValueById('courtDate');
  courtTime = getTextInputValueById('courtTime');
  officerName = getTextInputValueById('officerName');
  officerNumber = getTextInputValueById('officerNumber');
  officerDivision = getTextInputValueById('officerDivision');
  courtroom = getTextInputValueById('courtroom');
  telephoneNo1 = getTextInputValueById('telephoneNo1');
  telephoneNo2 = getTextInputValueById('telephoneNo2');
  telephoneNo3 = getTextInputValueById('telephoneNo3');
  telephoneNo = telephoneNo1 + "-" + telephoneNo2 + "-" + telephoneNo3;
  faxNo1 = getTextInputValueById('faxNo1');
  faxNo2 = getTextInputValueById('faxNo2');
  faxNo3 = getTextInputValueById('faxNo3');
  faxNo = faxNo1 + "-" + faxNo2 + "-" + faxNo3;
  courtroom = getTextInputValueById('courtroom');
  emailAddress = getTextInputValueById('emailAdd');
  actualSpeed = getTextInputValueById('actualSpeed');
  maxSpeed = getTextInputValueById('maxSpeed');
  var iconCodeDropdown = document.getElementById("iconCodeDropdown");
  iconCode = iconCodeDropdown.options[iconCodeDropdown.selectedIndex].text;
  var offenceDropdown = document.getElementById("offenceDropdown");
  chargeName = offenceDropdown.options[offenceDropdown.selectedIndex].text;
  //converting to a form same as in DB
  chargeName = chargeName.replace(/ /g,"_").toLowerCase()
}

function getTextInputValueById(id){
 // alert(id);
  var textInput = document.getElementById(id);
  return textInput.value;
}

function setTextInputValueById(id, value){
  var textInput = document.getElementById(id);
  textInput.value = value;
}

function setIconCodeDropdown(){
  var iconCodeDropdown = document.getElementById("iconCodeDropdown");
  for(var i = 0; i < iconCodeArray[0].length; i ++){ 
    var code = iconCodeArray[0][i];
    var codeOption = document.createElement("option");
    codeOption.textContent = code;
    codeOption.value = code;
    iconCodeDropdown.appendChild(codeOption);
  }

  //Populate saved icon code
  if(iconCode != ""){
    iconCodeDropdown.value = iconCode
  }
}
function setChargeNamesDropdown(){
  var offenceDropdown = document.getElementById("offenceDropdown");
  for(var i = 0; i < chargeNames[0].length; i ++){ 
    var code = chargeNames[0][i];
    var codeOption = document.createElement("option");
    codeOption.textContent = capitalize(code);
    codeOption.value = capitalize(code);
    offenceDropdown.appendChild(codeOption);
  }
  //alert(capitalize(offence));
 offenceDropdown.value = capitalize(offence);
 //offenceDropdown.value = offence;
}

function capitalize(str) {
  var frags = str.split('_');
  for (i=0; i<frags.length; i++) {
    frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);
  }
  return frags.join(' ');
}

function submit(){
  collectDisclosureRequestData();

  $.post("/sendFormattedDisclosureRequestFormToChat", {
      id: id,
      givenName: givenName,
      familyName: familyName,
      telephoneNo: telephoneNo,
      faxNo: faxNo,
      streetNo: streetNo,
      street: street,
      apt: apt,
      municipality: municipality,
      province: province,
      postalCode: postalCode,
      offenceNo: offenceNo,
      offenceDate: offenceDate,
      iconCode: iconCode,
      courtDate: courtDate,
      courtTime: courtTime,
      courtRoom: courtroom,
      isMobile: isMobile,
      officerName: officerName,
      officerNumber: officerNumber,
      officerDivision: officerDivision,
      emailAddress: emailAddress,
      actualSpeed: actualSpeed,
      maxSpeed: maxSpeed,
      offence: chargeName
    },
    function(data){
      //Success
      if(data == "OK"){
        alert("Thank you for submitting! Your forms are being generated."); 
      }
      else{
        alert("There was an error generating one of the forms, please try again.");
      }
    })
    .fail(function(){
      alert("There was an error generating one of the forms, please try again.");
    })
    .done(function(){
      alert("Please close the webview (close button in top right corner) and wait in chat when your are done.");
    });
}

function saveData(){
  collectDisclosureRequestData();
  $.post("/saveDisclosureRequestInformation",{
      id: id,
      givenName: givenName,
      familyName: familyName,
      telephoneNo: telephoneNo,
      faxNo: faxNo,
      streetNo: streetNo,
      street: street,
      apt: apt,
      municipality: municipality,
      province: province,
      postalCode: postalCode,
      offenceNo: offenceNo,
      offenceDate: offenceDate,
      iconCode: iconCode,
      courtDate: courtDate,
      courtTime: courtTime,
      courtRoom: courtroom,
      isMobile: isMobile,
      officerName: officerName,
      officerNumber: officerNumber,
      officerDivision: officerDivision,
      emailAddress: emailAddress,
      actualSpeed: actualSpeed,
      maxSpeed: maxSpeed,
      offence: chargeName
    },
   function(data){
      //Success
      alert("Thank you for submitting! Your form is now being saved.");
    })
    .fail(function(){
      alert("There was an error saving your form, please try again.");
    })
    .done(function(){
      alert("Your information has been saved. Please submit to request your form.");
    });

}

// When the user clicks on the button, open the modal 
/*function displayModal(modalName){
  switch(modalName){
    case "nameInfoModal":
      nameInfoModal.style.display = "block";
      break;
    case "offenceNoInfoModal":
      offenceNoInfoModal.style.display = "block";
      break;
    case "offenceDateInfoModal":
      offenceDateInfoModal.style.display = "block";
      break;
    case "iconCodeInfoModal":
      iconCodeInfoModal.style.display = "block";
      break;
    case "courtDateInfoModal":
      courtDateInfoModal.style.display = "block";
      break;
  }
}*/

// When the user clicks on <span> (x), close the modal
/*function closeModal(modalName){
  switch(modalName){
    case "nameInfoModal":
      nameInfoModal.style.display = "none";
      break;
    case "offenceNoInfoModal":
      offenceNoInfoModal.style.display = "none";
      break;
    case "signatureModal":
      signatureModal.style.display = "none";
      break;
    case "iconCodeInfoModal":
      iconCodeInfoModal.style.display = "none";
      break;
    case "courtDateInfoModal":
      courtDateInfoModal.style.display = "none";
      break;
  }
}


*/
function closeModalByEventTarget(eventTarget){
  if (eventTarget == nameInfoModal) {
      nameInfoModal.style.display = "none";
    }
    else if (eventTarget == offenceNoInfoModal) {
      offenceNoInfoModal.style.display = "none";
    }
    else if (eventTarget == offenceDateInfoModal) {
      offenceDateInfoModal.style.display = "none";
    }
    else if (eventTarget == iconCodeInfoModal) {
      iconCodeInfoModal.style.display = "none";
    }
    else if (eventTarget == courtDateInfoModal) {
      courtDateInfoModal.style.display = "none";
    }
}
// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
    closeModalByEventTarget(event.target);
}
</script>